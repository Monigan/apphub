plugins {
    id "org.springframework.boot" version "2.7.0" apply false
    id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
    id "com.gorylenko.gradle-git-properties" version "2.3.2" apply false
    id "io.spring.nohttp" version "0.0.10" apply false
    id "org.hibernate.orm" version "6.0.0.Final" apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'checkstyle'
    apply plugin: 'io.spring.nohttp'
    apply plugin: 'jacoco'
    apply plugin: 'com.gorylenko.gradle-git-properties'

    version = "${projectVersion}"
    sourceCompatibility=17
    targetCompatibility=17


    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Copy).all {
        duplicatesStrategy 'exclude'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'github'
            url = uri("https://github.com/rgordeev/spring-boot-starter-minio/master")
        }
    }

    // filter projects where we need to add liquibase
    // remember, "project" refers to the sub-project
    // and "name" refers to the sub-project name from "settings.gradle"

    compileJava.dependsOn(processResources)
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation "io.micrometer:micrometer-registry-prometheus"
    }

    // set up jacoco coverage rules
    jacocoTestCoverageVerification {
        executionData test
        violationRules {
            rule {
                limit {
                    minimum = 0.0
                }
            }
        }
    }

    // set up jacoco coverate metrics
    jacocoTestReport {
        executionData test
    }

    checkstyle {
        toolVersion "${checkstyle_version}"
        maxWarnings = 10
        ignoreFailures = true
    }

    build.dependsOn jacocoTestCoverageVerification, jacocoTestReport

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        }
    }
}
